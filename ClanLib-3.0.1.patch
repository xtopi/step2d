diff -durb /tmp/clan/ClanLib-3.0.1/Sources/API/Physics2D/Collision/Shapes/polygon_shape.h Sources/API/Physics2D/Collision/Shapes/polygon_shape.h
--- /tmp/clan/ClanLib-3.0.1/Sources/API/Physics2D/Collision/Shapes/polygon_shape.h	2013-12-09 19:28:11.000000000 +0400
+++ Sources/API/Physics2D/Collision/Shapes/polygon_shape.h	2014-03-10 00:08:28.816008302 +0400
@@ -94,8 +94,9 @@
 	//int32 	GetChildCount () const
 	//void 	Set (const b2Vec2 *vertices, int32 vertexCount)
 
-	void 	set_as_box (float width, float height);
-	void 	set_as_box (float width, float height, const Vec2f &center, Angle &angle);
+	void 	set_as_box (float x_extent, float y_extent);
+	void 	set_as_box (float x_extent, float y_extent, const Vec2f &center, Angle &angle);
+	
 	//bool 	TestPoint (const b2Transform &transform, const b2Vec2 &p) const
 	//bool 	RayCast (b2RayCastOutput *output, const b2RayCastInput &input, const b2Transform &transform, int32 childIndex) const
 	//void 	ComputeAABB (b2AABB *aabb, const b2Transform &transform, int32 childIndex) const
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/API/Physics2D/World/physics_world.h Sources/API/Physics2D/World/physics_world.h
--- /tmp/clan/ClanLib-3.0.1/Sources/API/Physics2D/World/physics_world.h	2013-12-09 19:28:11.000000000 +0400
+++ Sources/API/Physics2D/World/physics_world.h	2014-03-09 23:54:38.347007377 +0400
@@ -34,6 +34,8 @@
 #include "../../Core/Signals/signal_v1.h"
 #include <memory>
 
+class b2World;
+
 namespace clan
 {
 /// \addtogroup clanphysics_world clanPhysics World
@@ -105,6 +107,8 @@
 	/// \brief Return the Physics Query Assistant of the world.
 	PhysicsQueryAssistant &get_qa();
 
+	/// \brief Get underlying b2 world instance
+	b2World &get_b2();
 /// \}
 /// \name Operations
 /// \{
@@ -113,6 +117,9 @@
 	/// \brief Sets the object lifetime management. If enabled the physics objects are going to be removed from the Physics Context after the last API object pointing to them cease to exist.
 	void set_olm(const bool value = true);
 
+	/// \brief pixels per meter
+	void set_physic_scale(int pixels);
+
 	/// \brief Simulates one step of the physic simulation
 	void step();
 
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/Dynamics/body_description.cpp Sources/Physics2D/Dynamics/body_description.cpp
--- /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/Dynamics/body_description.cpp	2013-12-09 19:28:11.000000000 +0400
+++ Sources/Physics2D/Dynamics/body_description.cpp	2014-03-09 23:51:14.915007156 +0400
@@ -27,7 +27,7 @@
 */
 
 #include "Physics2D/precomp.h"
-#include "../Box2D/Box2D.h"
 #include "body_description_impl.h"
 #include "../World/physics_world_impl.h"
 #include "../World/physics_context_impl.h"
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world.cpp Sources/Physics2D/World/physics_world.cpp
--- /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world.cpp	2013-12-09 19:28:11.000000000 +0400
+++ Sources/Physics2D/World/physics_world.cpp	2014-03-09 23:34:52.552006052 +0400
@@ -84,6 +84,10 @@
 	return impl->assistant;
 }
 
+b2World &PhysicsWorld::get_b2() {
+	return impl->world;
+}
+
 //																											_____________																							
 //																											S I G N A L S
 
@@ -100,6 +104,10 @@
 //																											___________________																											
 //																											O P E R A T I O N S
 
+void PhysicsWorld::set_physic_scale(int pixels)
+{
+	impl->physic_scale = pixels;
+}
 void PhysicsWorld::set_olm(const bool value)
 {
 	impl->olm_enabled = value;
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_description_impl.h Sources/Physics2D/World/physics_world_description_impl.h
--- /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_description_impl.h	2013-12-09 19:28:11.000000000 +0400
+++ Sources/Physics2D/World/physics_world_description_impl.h	2014-03-11 21:39:59.730003595 +0400
@@ -49,7 +49,8 @@
 		velocity_iterations(8),
 		position_iterations(3),
 		physic_scale(100),
-		olm_enabled(false)
+		olm_enabled(false),
+		emit_collisions(false)
 	{
 	}
 
@@ -69,6 +70,7 @@
 	float timestep;
 	int velocity_iterations;
 	int position_iterations;
+	bool emit_collisions;
 
 	std::map<std::string, std::shared_ptr<PhysicsWorldDescriptionData> > data_objects;
 
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_impl.cpp Sources/Physics2D/World/physics_world_impl.cpp
--- /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_impl.cpp	2013-12-09 19:28:11.000000000 +0400
+++ Sources/Physics2D/World/physics_world_impl.cpp	2014-03-11 21:48:51.370004189 +0400
@@ -51,8 +51,6 @@
 	physic_scale		(100),
 	olm_enabled			(false)
 {	
-	world.SetContactListener(&listener); //Uncomment after finishing physics context.
-	world.SetContactFilter(&listener); //Uncomment after finishing physics context.
 }
 
 PhysicsWorld_Impl::~PhysicsWorld_Impl() 
@@ -94,35 +92,35 @@
 	position_iterations = desc_impl.position_iterations;
 	physic_scale = desc_impl.physic_scale;
 	olm_enabled = desc_impl.olm_enabled;
+	use_listener = desc_impl.emit_collisions;
 
 	world.SetAllowSleeping(desc_impl.sleep_enabled);
 	world.SetGravity(desc_impl.gravity);
 
+	if (use_listener) {
+		world.SetContactListener(&listener); //Uncomment after finishing physics context.
+		world.SetContactFilter(&listener); //Uncomment after finishing physics context.
+	}
 }
 void PhysicsWorld_Impl::step()
 {
+	step(timestep,velocity_iterations,position_iterations);
+}
+void PhysicsWorld_Impl::step(float timestep, int velocity_iterations, int position_iterations)
+{
+	if (use_listener) {
 	if(joints_for_checking.size()>0) check_joints();
 	if(fixtures_for_checking.size()>0) check_fixtures();
 	if(bodies_for_checking.size()>0) check_bodies();
+	}
 
 	if(joints_for_destroying.size()>0) remove_joints();
 	if(fixtures_for_destroying.size()>0) remove_fixtures();
 	if(bodies_for_destroying.size()>0) remove_bodies();
 
 	world.Step(timestep,velocity_iterations,position_iterations);
-	listener.emit_collision_signals();
-
-	sig_world_step.invoke(timestep);
-
 
-}
-void PhysicsWorld_Impl::step(float timestep, int velocity_iterations, int position_iterations)
-{
-	if(joints_for_destroying.size()>0) remove_joints();
-	if(fixtures_for_destroying.size()>0) remove_fixtures();
-	if(bodies_for_destroying.size()>0) remove_bodies();
-
-	world.Step(timestep,velocity_iterations,position_iterations);
+	if (use_listener)
 	listener.emit_collision_signals();
 
 	sig_world_step.invoke(timestep);
diff -durb /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_impl.h Sources/Physics2D/World/physics_world_impl.h
--- /tmp/clan/ClanLib-3.0.1/Sources/Physics2D/World/physics_world_impl.h	2013-12-09 19:28:11.000000000 +0400
+++ Sources/Physics2D/World/physics_world_impl.h	2014-03-11 21:41:24.272003689 +0400
@@ -28,7 +28,7 @@
 
 #pragma once
 
-#include "../Box2D/Box2D.h"
+// #include "../Box2D/Box2D.h"
 #include <memory>
 #include "physics_listener.h"
 #include "API/Physics2D/World/physics_world.h"
@@ -137,6 +137,7 @@
 	float timestep;
 	int velocity_iterations;
 	int position_iterations;
+	bool use_listener;
 	std::string name;
 /// \}
 
